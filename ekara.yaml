ekara:
  base: https://github.com
  components:
    ek-aws:
      repository: ekara-platform/aws-provider
      ref: master
    ek-azure:
      repository: ekara-platform/azure-provider
      ref: master
    ek-swarm:
      repository: ekara-platform/swarm-orchestrator
      ref: master
    ek-core:
      repository: ekara-platform/core-stack
      ref: master
    ek-swarm-visualizer:
      repository: ekara-platform/swarm-visualizer-stack
      ref: v1.0.0

vars:
  ekara:
    volume:
      path: /var/lib/ekara
      size: 20

providers:
  ek-aws:
    component: ek-aws
    params:
      securityGroups:
        ek-ssh:
          rules:
          - proto: tcp
            ports:
            - 22
            cidr_ip: 0.0.0.0/0
            rule_desc: Node SSH access
        ek-swarm:
          rules:
          - proto: tcp
            ports:
            - 2377
            - 7946
            cidr_ip: 0.0.0.0/0
            rule_desc: Swarm TCP communication
          - proto: udp
            ports:
            - 7946
            - 4789
            cidr_ip: 0.0.0.0/0
            rule_desc: Swarm UDP communication
      volumes:
        ekara:
          ebs:
            volume_size: {{ .Vars.ekara.volume.size }}
            delete_on_termination: true
          fs:
            mount_path: {{ .Vars.ekara.volume.path }}
  ek-azure:
    component: ek-azure

orchestrator:
  component: ek-swarm
  params:
    daemon:
      data-root: "{{ .Vars.ekara.volume.path }}/docker"

#stacks:
#  ek-core:
#    component: ek-core
#    copies:
#      api:
#        path: "{{ .Vars.ekara.volume.path }}/api"
#    params:
#      api:
#        workDir: "{{ .Vars.ekara.volume.path }}/api"
